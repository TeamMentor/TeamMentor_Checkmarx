//O2Ref:System.Web.Services.dll
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5472
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.1432.
// 

namespace Checkmarx712Audit
{
/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="CxAuditWebServiceSoap", Namespace="http://Checkmarx.com/v7")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Group))]
public partial class CxAuditWebService_Proxy : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback LoginOperationCompleted;
    
    private System.Threading.SendOrPostCallback AddScanResultsToProjectOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetAncestryGroupTreeOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetCacheOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetHierarchyGroupTreeOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetPresetDetailsOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetPresetListOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetProjectConfigurationOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetProjectsWithScansOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetQueryCollectionForLanguageOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetQueryCollectionForLanguageByTeamIdOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetQueryDescriptionOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetResultsOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetResultStateListOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetResultSummaryOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetSourceCodeForScanOperationCompleted;
    
    private System.Threading.SendOrPostCallback LogoutOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateResultStateOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateScanCommentOperationCompleted;
    
    private System.Threading.SendOrPostCallback UploadProjectWithDefaultSettingsOperationCompleted;
    
    private System.Threading.SendOrPostCallback UploadQueriesOperationCompleted;
    
    /// <remarks/>
    public CxAuditWebService_Proxy(string url) {
        //this.Url = "http://174.129.243.209/CxWebInterface/Audit/CxAuditWebService.asmx";
		this.Url = url;
    }
    
    /// <remarks/>
    public event LoginCompletedEventHandler LoginCompleted;
    
    /// <remarks/>
    public event AddScanResultsToProjectCompletedEventHandler AddScanResultsToProjectCompleted;
    
    /// <remarks/>
    public event GetAncestryGroupTreeCompletedEventHandler GetAncestryGroupTreeCompleted;
    
    /// <remarks/>
    public event GetCacheCompletedEventHandler GetCacheCompleted;
    
    /// <remarks/>
    public event GetHierarchyGroupTreeCompletedEventHandler GetHierarchyGroupTreeCompleted;
    
    /// <remarks/>
    public event GetPresetDetailsCompletedEventHandler GetPresetDetailsCompleted;
    
    /// <remarks/>
    public event GetPresetListCompletedEventHandler GetPresetListCompleted;
    
    /// <remarks/>
    public event GetProjectConfigurationCompletedEventHandler GetProjectConfigurationCompleted;
    
    /// <remarks/>
    public event GetProjectsWithScansCompletedEventHandler GetProjectsWithScansCompleted;
    
    /// <remarks/>
    public event GetQueryCollectionForLanguageCompletedEventHandler GetQueryCollectionForLanguageCompleted;
    
    /// <remarks/>
    public event GetQueryCollectionForLanguageByTeamIdCompletedEventHandler GetQueryCollectionForLanguageByTeamIdCompleted;
    
    /// <remarks/>
    public event GetQueryDescriptionCompletedEventHandler GetQueryDescriptionCompleted;
    
    /// <remarks/>
    public event GetResultsCompletedEventHandler GetResultsCompleted;
    
    /// <remarks/>
    public event GetResultStateListCompletedEventHandler GetResultStateListCompleted;
    
    /// <remarks/>
    public event GetResultSummaryCompletedEventHandler GetResultSummaryCompleted;
    
    /// <remarks/>
    public event GetSourceCodeForScanCompletedEventHandler GetSourceCodeForScanCompleted;
    
    /// <remarks/>
    public event LogoutCompletedEventHandler LogoutCompleted;
    
    /// <remarks/>
    public event UpdateResultStateCompletedEventHandler UpdateResultStateCompleted;
    
    /// <remarks/>
    public event UpdateScanCommentCompletedEventHandler UpdateScanCommentCompleted;
    
    /// <remarks/>
    public event UploadProjectWithDefaultSettingsCompletedEventHandler UploadProjectWithDefaultSettingsCompleted;
    
    /// <remarks/>
    public event UploadQueriesCompletedEventHandler UploadQueriesCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/v7/Login", RequestNamespace="http://Checkmarx.com/v7", ResponseNamespace="http://Checkmarx.com/v7", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CxWSResponseLoginData Login(Credentials applicationCredentials, int lcid) {
        object[] results = this.Invoke("Login", new object[] {
                    applicationCredentials,
                    lcid});
        return ((CxWSResponseLoginData)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginLogin(Credentials applicationCredentials, int lcid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Login", new object[] {
                    applicationCredentials,
                    lcid}, callback, asyncState);
    }
    
    /// <remarks/>
    public CxWSResponseLoginData EndLogin(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CxWSResponseLoginData)(results[0]));
    }
    
    /// <remarks/>
    public void LoginAsync(Credentials applicationCredentials, int lcid) {
        this.LoginAsync(applicationCredentials, lcid, null);
    }
    
    /// <remarks/>
    public void LoginAsync(Credentials applicationCredentials, int lcid, object userState) {
        if ((this.LoginOperationCompleted == null)) {
            this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
        }
        this.InvokeAsync("Login", new object[] {
                    applicationCredentials,
                    lcid}, this.LoginOperationCompleted, userState);
    }
    
    private void OnLoginOperationCompleted(object arg) {
        if ((this.LoginCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/v7/AddScanResultsToProject", RequestNamespace="http://Checkmarx.com/v7", ResponseNamespace="http://Checkmarx.com/v7", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CxWSResponseBasicScanData AddScanResultsToProject(string sessionId, long projectId, string sourceId, AuditResultsCollection resultsCollection, string comment) {
        object[] results = this.Invoke("AddScanResultsToProject", new object[] {
                    sessionId,
                    projectId,
                    sourceId,
                    resultsCollection,
                    comment});
        return ((CxWSResponseBasicScanData)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddScanResultsToProject(string sessionId, long projectId, string sourceId, AuditResultsCollection resultsCollection, string comment, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddScanResultsToProject", new object[] {
                    sessionId,
                    projectId,
                    sourceId,
                    resultsCollection,
                    comment}, callback, asyncState);
    }
    
    /// <remarks/>
    public CxWSResponseBasicScanData EndAddScanResultsToProject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CxWSResponseBasicScanData)(results[0]));
    }
    
    /// <remarks/>
    public void AddScanResultsToProjectAsync(string sessionId, long projectId, string sourceId, AuditResultsCollection resultsCollection, string comment) {
        this.AddScanResultsToProjectAsync(sessionId, projectId, sourceId, resultsCollection, comment, null);
    }
    
    /// <remarks/>
    public void AddScanResultsToProjectAsync(string sessionId, long projectId, string sourceId, AuditResultsCollection resultsCollection, string comment, object userState) {
        if ((this.AddScanResultsToProjectOperationCompleted == null)) {
            this.AddScanResultsToProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddScanResultsToProjectOperationCompleted);
        }
        this.InvokeAsync("AddScanResultsToProject", new object[] {
                    sessionId,
                    projectId,
                    sourceId,
                    resultsCollection,
                    comment}, this.AddScanResultsToProjectOperationCompleted, userState);
    }
    
    private void OnAddScanResultsToProjectOperationCompleted(object arg) {
        if ((this.AddScanResultsToProjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AddScanResultsToProjectCompleted(this, new AddScanResultsToProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/v7/GetAncestryGroupTree", RequestNamespace="http://Checkmarx.com/v7", ResponseNamespace="http://Checkmarx.com/v7", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CxWSResponseHierarchyGroupNodes GetAncestryGroupTree(string sessionID, string pTeamID) {
        object[] results = this.Invoke("GetAncestryGroupTree", new object[] {
                    sessionID,
                    pTeamID});
        return ((CxWSResponseHierarchyGroupNodes)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetAncestryGroupTree(string sessionID, string pTeamID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetAncestryGroupTree", new object[] {
                    sessionID,
                    pTeamID}, callback, asyncState);
    }
    
    /// <remarks/>
    public CxWSResponseHierarchyGroupNodes EndGetAncestryGroupTree(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CxWSResponseHierarchyGroupNodes)(results[0]));
    }
    
    /// <remarks/>
    public void GetAncestryGroupTreeAsync(string sessionID, string pTeamID) {
        this.GetAncestryGroupTreeAsync(sessionID, pTeamID, null);
    }
    
    /// <remarks/>
    public void GetAncestryGroupTreeAsync(string sessionID, string pTeamID, object userState) {
        if ((this.GetAncestryGroupTreeOperationCompleted == null)) {
            this.GetAncestryGroupTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAncestryGroupTreeOperationCompleted);
        }
        this.InvokeAsync("GetAncestryGroupTree", new object[] {
                    sessionID,
                    pTeamID}, this.GetAncestryGroupTreeOperationCompleted, userState);
    }
    
    private void OnGetAncestryGroupTreeOperationCompleted(object arg) {
        if ((this.GetAncestryGroupTreeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAncestryGroupTreeCompleted(this, new GetAncestryGroupTreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/v7/GetCache", RequestNamespace="http://Checkmarx.com/v7", ResponseNamespace="http://Checkmarx.com/v7", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CxWSResponseCache GetCache(string sessionId, long scanId) {
        object[] results = this.Invoke("GetCache", new object[] {
                    sessionId,
                    scanId});
        return ((CxWSResponseCache)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetCache(string sessionId, long scanId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetCache", new object[] {
                    sessionId,
                    scanId}, callback, asyncState);
    }
    
    /// <remarks/>
    public CxWSResponseCache EndGetCache(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CxWSResponseCache)(results[0]));
    }
    
    /// <remarks/>
    public void GetCacheAsync(string sessionId, long scanId) {
        this.GetCacheAsync(sessionId, scanId, null);
    }
    
    /// <remarks/>
    public void GetCacheAsync(string sessionId, long scanId, object userState) {
        if ((this.GetCacheOperationCompleted == null)) {
            this.GetCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCacheOperationCompleted);
        }
        this.InvokeAsync("GetCache", new object[] {
                    sessionId,
                    scanId}, this.GetCacheOperationCompleted, userState);
    }
    
    private void OnGetCacheOperationCompleted(object arg) {
        if ((this.GetCacheCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetCacheCompleted(this, new GetCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/v7/GetHierarchyGroupTree", RequestNamespace="http://Checkmarx.com/v7", ResponseNamespace="http://Checkmarx.com/v7", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CxWSResponseHierarchyGroupNodes GetHierarchyGroupTree(string sessionID) {
        object[] results = this.Invoke("GetHierarchyGroupTree", new object[] {
                    sessionID});
        return ((CxWSResponseHierarchyGroupNodes)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetHierarchyGroupTree(string sessionID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetHierarchyGroupTree", new object[] {
                    sessionID}, callback, asyncState);
    }
    
    /// <remarks/>
    public CxWSResponseHierarchyGroupNodes EndGetHierarchyGroupTree(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CxWSResponseHierarchyGroupNodes)(results[0]));
    }
    
    /// <remarks/>
    public void GetHierarchyGroupTreeAsync(string sessionID) {
        this.GetHierarchyGroupTreeAsync(sessionID, null);
    }
    
    /// <remarks/>
    public void GetHierarchyGroupTreeAsync(string sessionID, object userState) {
        if ((this.GetHierarchyGroupTreeOperationCompleted == null)) {
            this.GetHierarchyGroupTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHierarchyGroupTreeOperationCompleted);
        }
        this.InvokeAsync("GetHierarchyGroupTree", new object[] {
                    sessionID}, this.GetHierarchyGroupTreeOperationCompleted, userState);
    }
    
    private void OnGetHierarchyGroupTreeOperationCompleted(object arg) {
        if ((this.GetHierarchyGroupTreeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetHierarchyGroupTreeCompleted(this, new GetHierarchyGroupTreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/v7/GetPresetDetails", RequestNamespace="http://Checkmarx.com/v7", ResponseNamespace="http://Checkmarx.com/v7", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CxWSResponsePresetDetails GetPresetDetails(string sessionId, long id) {
        object[] results = this.Invoke("GetPresetDetails", new object[] {
                    sessionId,
                    id});
        return ((CxWSResponsePresetDetails)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPresetDetails(string sessionId, long id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPresetDetails", new object[] {
                    sessionId,
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public CxWSResponsePresetDetails EndGetPresetDetails(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CxWSResponsePresetDetails)(results[0]));
    }
    
    /// <remarks/>
    public void GetPresetDetailsAsync(string sessionId, long id) {
        this.GetPresetDetailsAsync(sessionId, id, null);
    }
    
    /// <remarks/>
    public void GetPresetDetailsAsync(string sessionId, long id, object userState) {
        if ((this.GetPresetDetailsOperationCompleted == null)) {
            this.GetPresetDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPresetDetailsOperationCompleted);
        }
        this.InvokeAsync("GetPresetDetails", new object[] {
                    sessionId,
                    id}, this.GetPresetDetailsOperationCompleted, userState);
    }
    
    private void OnGetPresetDetailsOperationCompleted(object arg) {
        if ((this.GetPresetDetailsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPresetDetailsCompleted(this, new GetPresetDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/v7/GetPresetList", RequestNamespace="http://Checkmarx.com/v7", ResponseNamespace="http://Checkmarx.com/v7", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CxWSResponsePresetList GetPresetList(string SessionID) {
        object[] results = this.Invoke("GetPresetList", new object[] {
                    SessionID});
        return ((CxWSResponsePresetList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPresetList(string SessionID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPresetList", new object[] {
                    SessionID}, callback, asyncState);
    }
    
    /// <remarks/>
    public CxWSResponsePresetList EndGetPresetList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CxWSResponsePresetList)(results[0]));
    }
    
    /// <remarks/>
    public void GetPresetListAsync(string SessionID) {
        this.GetPresetListAsync(SessionID, null);
    }
    
    /// <remarks/>
    public void GetPresetListAsync(string SessionID, object userState) {
        if ((this.GetPresetListOperationCompleted == null)) {
            this.GetPresetListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPresetListOperationCompleted);
        }
        this.InvokeAsync("GetPresetList", new object[] {
                    SessionID}, this.GetPresetListOperationCompleted, userState);
    }
    
    private void OnGetPresetListOperationCompleted(object arg) {
        if ((this.GetPresetListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPresetListCompleted(this, new GetPresetListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/v7/GetProjectConfiguration", RequestNamespace="http://Checkmarx.com/v7", ResponseNamespace="http://Checkmarx.com/v7", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CxWSResponseProjectConfig GetProjectConfiguration(string sessionID, long projectID) {
        object[] results = this.Invoke("GetProjectConfiguration", new object[] {
                    sessionID,
                    projectID});
        return ((CxWSResponseProjectConfig)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetProjectConfiguration(string sessionID, long projectID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetProjectConfiguration", new object[] {
                    sessionID,
                    projectID}, callback, asyncState);
    }
    
    /// <remarks/>
    public CxWSResponseProjectConfig EndGetProjectConfiguration(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CxWSResponseProjectConfig)(results[0]));
    }
    
    /// <remarks/>
    public void GetProjectConfigurationAsync(string sessionID, long projectID) {
        this.GetProjectConfigurationAsync(sessionID, projectID, null);
    }
    
    /// <remarks/>
    public void GetProjectConfigurationAsync(string sessionID, long projectID, object userState) {
        if ((this.GetProjectConfigurationOperationCompleted == null)) {
            this.GetProjectConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectConfigurationOperationCompleted);
        }
        this.InvokeAsync("GetProjectConfiguration", new object[] {
                    sessionID,
                    projectID}, this.GetProjectConfigurationOperationCompleted, userState);
    }
    
    private void OnGetProjectConfigurationOperationCompleted(object arg) {
        if ((this.GetProjectConfigurationCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetProjectConfigurationCompleted(this, new GetProjectConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/v7/GetProjectsWithScans", RequestNamespace="http://Checkmarx.com/v7", ResponseNamespace="http://Checkmarx.com/v7", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CxWSResponseProjectsScansList GetProjectsWithScans(string sessionId) {
        object[] results = this.Invoke("GetProjectsWithScans", new object[] {
                    sessionId});
        return ((CxWSResponseProjectsScansList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetProjectsWithScans(string sessionId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetProjectsWithScans", new object[] {
                    sessionId}, callback, asyncState);
    }
    
    /// <remarks/>
    public CxWSResponseProjectsScansList EndGetProjectsWithScans(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CxWSResponseProjectsScansList)(results[0]));
    }
    
    /// <remarks/>
    public void GetProjectsWithScansAsync(string sessionId) {
        this.GetProjectsWithScansAsync(sessionId, null);
    }
    
    /// <remarks/>
    public void GetProjectsWithScansAsync(string sessionId, object userState) {
        if ((this.GetProjectsWithScansOperationCompleted == null)) {
            this.GetProjectsWithScansOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectsWithScansOperationCompleted);
        }
        this.InvokeAsync("GetProjectsWithScans", new object[] {
                    sessionId}, this.GetProjectsWithScansOperationCompleted, userState);
    }
    
    private void OnGetProjectsWithScansOperationCompleted(object arg) {
        if ((this.GetProjectsWithScansCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetProjectsWithScansCompleted(this, new GetProjectsWithScansCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/v7/GetQueryCollectionForLanguage", RequestNamespace="http://Checkmarx.com/v7", ResponseNamespace="http://Checkmarx.com/v7", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CxQueryCollectionResponse GetQueryCollectionForLanguage(string sessionId, int projectType, long projectId) {
        object[] results = this.Invoke("GetQueryCollectionForLanguage", new object[] {
                    sessionId,
                    projectType,
                    projectId});
        return ((CxQueryCollectionResponse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetQueryCollectionForLanguage(string sessionId, int projectType, long projectId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetQueryCollectionForLanguage", new object[] {
                    sessionId,
                    projectType,
                    projectId}, callback, asyncState);
    }
    
    /// <remarks/>
    public CxQueryCollectionResponse EndGetQueryCollectionForLanguage(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CxQueryCollectionResponse)(results[0]));
    }
    
    /// <remarks/>
    public void GetQueryCollectionForLanguageAsync(string sessionId, int projectType, long projectId) {
        this.GetQueryCollectionForLanguageAsync(sessionId, projectType, projectId, null);
    }
    
    /// <remarks/>
    public void GetQueryCollectionForLanguageAsync(string sessionId, int projectType, long projectId, object userState) {
        if ((this.GetQueryCollectionForLanguageOperationCompleted == null)) {
            this.GetQueryCollectionForLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryCollectionForLanguageOperationCompleted);
        }
        this.InvokeAsync("GetQueryCollectionForLanguage", new object[] {
                    sessionId,
                    projectType,
                    projectId}, this.GetQueryCollectionForLanguageOperationCompleted, userState);
    }
    
    private void OnGetQueryCollectionForLanguageOperationCompleted(object arg) {
        if ((this.GetQueryCollectionForLanguageCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetQueryCollectionForLanguageCompleted(this, new GetQueryCollectionForLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/v7/GetQueryCollectionForLanguageByTeamId", RequestNamespace="http://Checkmarx.com/v7", ResponseNamespace="http://Checkmarx.com/v7", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CxQueryCollectionResponse GetQueryCollectionForLanguageByTeamId(string sessionId, int projectType, string teamId) {
        object[] results = this.Invoke("GetQueryCollectionForLanguageByTeamId", new object[] {
                    sessionId,
                    projectType,
                    teamId});
        return ((CxQueryCollectionResponse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetQueryCollectionForLanguageByTeamId(string sessionId, int projectType, string teamId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetQueryCollectionForLanguageByTeamId", new object[] {
                    sessionId,
                    projectType,
                    teamId}, callback, asyncState);
    }
    
    /// <remarks/>
    public CxQueryCollectionResponse EndGetQueryCollectionForLanguageByTeamId(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CxQueryCollectionResponse)(results[0]));
    }
    
    /// <remarks/>
    public void GetQueryCollectionForLanguageByTeamIdAsync(string sessionId, int projectType, string teamId) {
        this.GetQueryCollectionForLanguageByTeamIdAsync(sessionId, projectType, teamId, null);
    }
    
    /// <remarks/>
    public void GetQueryCollectionForLanguageByTeamIdAsync(string sessionId, int projectType, string teamId, object userState) {
        if ((this.GetQueryCollectionForLanguageByTeamIdOperationCompleted == null)) {
            this.GetQueryCollectionForLanguageByTeamIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryCollectionForLanguageByTeamIdOperationCompleted);
        }
        this.InvokeAsync("GetQueryCollectionForLanguageByTeamId", new object[] {
                    sessionId,
                    projectType,
                    teamId}, this.GetQueryCollectionForLanguageByTeamIdOperationCompleted, userState);
    }
    
    private void OnGetQueryCollectionForLanguageByTeamIdOperationCompleted(object arg) {
        if ((this.GetQueryCollectionForLanguageByTeamIdCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetQueryCollectionForLanguageByTeamIdCompleted(this, new GetQueryCollectionForLanguageByTeamIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/v7/GetQueryDescription", RequestNamespace="http://Checkmarx.com/v7", ResponseNamespace="http://Checkmarx.com/v7", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CxWSResponseQueryDescription GetQueryDescription(string sessionId, int cweId) {
        object[] results = this.Invoke("GetQueryDescription", new object[] {
                    sessionId,
                    cweId});
        return ((CxWSResponseQueryDescription)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetQueryDescription(string sessionId, int cweId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetQueryDescription", new object[] {
                    sessionId,
                    cweId}, callback, asyncState);
    }
    
    /// <remarks/>
    public CxWSResponseQueryDescription EndGetQueryDescription(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CxWSResponseQueryDescription)(results[0]));
    }
    
    /// <remarks/>
    public void GetQueryDescriptionAsync(string sessionId, int cweId) {
        this.GetQueryDescriptionAsync(sessionId, cweId, null);
    }
    
    /// <remarks/>
    public void GetQueryDescriptionAsync(string sessionId, int cweId, object userState) {
        if ((this.GetQueryDescriptionOperationCompleted == null)) {
            this.GetQueryDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryDescriptionOperationCompleted);
        }
        this.InvokeAsync("GetQueryDescription", new object[] {
                    sessionId,
                    cweId}, this.GetQueryDescriptionOperationCompleted, userState);
    }
    
    private void OnGetQueryDescriptionOperationCompleted(object arg) {
        if ((this.GetQueryDescriptionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetQueryDescriptionCompleted(this, new GetQueryDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/v7/GetResults", RequestNamespace="http://Checkmarx.com/v7", ResponseNamespace="http://Checkmarx.com/v7", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CxWSResponseResultCollection GetResults(string sessionId, long scanId) {
        object[] results = this.Invoke("GetResults", new object[] {
                    sessionId,
                    scanId});
        return ((CxWSResponseResultCollection)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetResults(string sessionId, long scanId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetResults", new object[] {
                    sessionId,
                    scanId}, callback, asyncState);
    }
    
    /// <remarks/>
    public CxWSResponseResultCollection EndGetResults(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CxWSResponseResultCollection)(results[0]));
    }
    
    /// <remarks/>
    public void GetResultsAsync(string sessionId, long scanId) {
        this.GetResultsAsync(sessionId, scanId, null);
    }
    
    /// <remarks/>
    public void GetResultsAsync(string sessionId, long scanId, object userState) {
        if ((this.GetResultsOperationCompleted == null)) {
            this.GetResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultsOperationCompleted);
        }
        this.InvokeAsync("GetResults", new object[] {
                    sessionId,
                    scanId}, this.GetResultsOperationCompleted, userState);
    }
    
    private void OnGetResultsOperationCompleted(object arg) {
        if ((this.GetResultsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetResultsCompleted(this, new GetResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/v7/GetResultStateList", RequestNamespace="http://Checkmarx.com/v7", ResponseNamespace="http://Checkmarx.com/v7", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CxWSResponseResultStateList GetResultStateList(string sessionID) {
        object[] results = this.Invoke("GetResultStateList", new object[] {
                    sessionID});
        return ((CxWSResponseResultStateList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetResultStateList(string sessionID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetResultStateList", new object[] {
                    sessionID}, callback, asyncState);
    }
    
    /// <remarks/>
    public CxWSResponseResultStateList EndGetResultStateList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CxWSResponseResultStateList)(results[0]));
    }
    
    /// <remarks/>
    public void GetResultStateListAsync(string sessionID) {
        this.GetResultStateListAsync(sessionID, null);
    }
    
    /// <remarks/>
    public void GetResultStateListAsync(string sessionID, object userState) {
        if ((this.GetResultStateListOperationCompleted == null)) {
            this.GetResultStateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultStateListOperationCompleted);
        }
        this.InvokeAsync("GetResultStateList", new object[] {
                    sessionID}, this.GetResultStateListOperationCompleted, userState);
    }
    
    private void OnGetResultStateListOperationCompleted(object arg) {
        if ((this.GetResultStateListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetResultStateListCompleted(this, new GetResultStateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/v7/GetResultSummary", RequestNamespace="http://Checkmarx.com/v7", ResponseNamespace="http://Checkmarx.com/v7", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CXWSResponseResultSummary GetResultSummary(string sessionId, long scanId) {
        object[] results = this.Invoke("GetResultSummary", new object[] {
                    sessionId,
                    scanId});
        return ((CXWSResponseResultSummary)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetResultSummary(string sessionId, long scanId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetResultSummary", new object[] {
                    sessionId,
                    scanId}, callback, asyncState);
    }
    
    /// <remarks/>
    public CXWSResponseResultSummary EndGetResultSummary(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CXWSResponseResultSummary)(results[0]));
    }
    
    /// <remarks/>
    public void GetResultSummaryAsync(string sessionId, long scanId) {
        this.GetResultSummaryAsync(sessionId, scanId, null);
    }
    
    /// <remarks/>
    public void GetResultSummaryAsync(string sessionId, long scanId, object userState) {
        if ((this.GetResultSummaryOperationCompleted == null)) {
            this.GetResultSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultSummaryOperationCompleted);
        }
        this.InvokeAsync("GetResultSummary", new object[] {
                    sessionId,
                    scanId}, this.GetResultSummaryOperationCompleted, userState);
    }
    
    private void OnGetResultSummaryOperationCompleted(object arg) {
        if ((this.GetResultSummaryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetResultSummaryCompleted(this, new GetResultSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/v7/GetSourceCodeForScan", RequestNamespace="http://Checkmarx.com/v7", ResponseNamespace="http://Checkmarx.com/v7", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CxWSResponseSourceContainer GetSourceCodeForScan(long scanId) {
        object[] results = this.Invoke("GetSourceCodeForScan", new object[] {
                    scanId});
        return ((CxWSResponseSourceContainer)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetSourceCodeForScan(long scanId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetSourceCodeForScan", new object[] {
                    scanId}, callback, asyncState);
    }
    
    /// <remarks/>
    public CxWSResponseSourceContainer EndGetSourceCodeForScan(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CxWSResponseSourceContainer)(results[0]));
    }
    
    /// <remarks/>
    public void GetSourceCodeForScanAsync(long scanId) {
        this.GetSourceCodeForScanAsync(scanId, null);
    }
    
    /// <remarks/>
    public void GetSourceCodeForScanAsync(long scanId, object userState) {
        if ((this.GetSourceCodeForScanOperationCompleted == null)) {
            this.GetSourceCodeForScanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSourceCodeForScanOperationCompleted);
        }
        this.InvokeAsync("GetSourceCodeForScan", new object[] {
                    scanId}, this.GetSourceCodeForScanOperationCompleted, userState);
    }
    
    private void OnGetSourceCodeForScanOperationCompleted(object arg) {
        if ((this.GetSourceCodeForScanCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetSourceCodeForScanCompleted(this, new GetSourceCodeForScanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/v7/Logout", RequestNamespace="http://Checkmarx.com/v7", ResponseNamespace="http://Checkmarx.com/v7", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CxWSBasicRepsonse Logout(string sessionID) {
        object[] results = this.Invoke("Logout", new object[] {
                    sessionID});
        return ((CxWSBasicRepsonse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginLogout(string sessionID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Logout", new object[] {
                    sessionID}, callback, asyncState);
    }
    
    /// <remarks/>
    public CxWSBasicRepsonse EndLogout(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CxWSBasicRepsonse)(results[0]));
    }
    
    /// <remarks/>
    public void LogoutAsync(string sessionID) {
        this.LogoutAsync(sessionID, null);
    }
    
    /// <remarks/>
    public void LogoutAsync(string sessionID, object userState) {
        if ((this.LogoutOperationCompleted == null)) {
            this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
        }
        this.InvokeAsync("Logout", new object[] {
                    sessionID}, this.LogoutOperationCompleted, userState);
    }
    
    private void OnLogoutOperationCompleted(object arg) {
        if ((this.LogoutCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.LogoutCompleted(this, new LogoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/v7/UpdateResultState", RequestNamespace="http://Checkmarx.com/v7", ResponseNamespace="http://Checkmarx.com/v7", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CxWSBasicRepsonse UpdateResultState(string sessionID, long scanId, long PathId, long projectId, string Remarks, int ResultLabelType, string data) {
        object[] results = this.Invoke("UpdateResultState", new object[] {
                    sessionID,
                    scanId,
                    PathId,
                    projectId,
                    Remarks,
                    ResultLabelType,
                    data});
        return ((CxWSBasicRepsonse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateResultState(string sessionID, long scanId, long PathId, long projectId, string Remarks, int ResultLabelType, string data, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateResultState", new object[] {
                    sessionID,
                    scanId,
                    PathId,
                    projectId,
                    Remarks,
                    ResultLabelType,
                    data}, callback, asyncState);
    }
    
    /// <remarks/>
    public CxWSBasicRepsonse EndUpdateResultState(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CxWSBasicRepsonse)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateResultStateAsync(string sessionID, long scanId, long PathId, long projectId, string Remarks, int ResultLabelType, string data) {
        this.UpdateResultStateAsync(sessionID, scanId, PathId, projectId, Remarks, ResultLabelType, data, null);
    }
    
    /// <remarks/>
    public void UpdateResultStateAsync(string sessionID, long scanId, long PathId, long projectId, string Remarks, int ResultLabelType, string data, object userState) {
        if ((this.UpdateResultStateOperationCompleted == null)) {
            this.UpdateResultStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateResultStateOperationCompleted);
        }
        this.InvokeAsync("UpdateResultState", new object[] {
                    sessionID,
                    scanId,
                    PathId,
                    projectId,
                    Remarks,
                    ResultLabelType,
                    data}, this.UpdateResultStateOperationCompleted, userState);
    }
    
    private void OnUpdateResultStateOperationCompleted(object arg) {
        if ((this.UpdateResultStateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateResultStateCompleted(this, new UpdateResultStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/v7/UpdateScanComment", RequestNamespace="http://Checkmarx.com/v7", ResponseNamespace="http://Checkmarx.com/v7", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CxWSBasicRepsonse UpdateScanComment(string sessionID, long ScanID, string Comment) {
        object[] results = this.Invoke("UpdateScanComment", new object[] {
                    sessionID,
                    ScanID,
                    Comment});
        return ((CxWSBasicRepsonse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateScanComment(string sessionID, long ScanID, string Comment, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateScanComment", new object[] {
                    sessionID,
                    ScanID,
                    Comment}, callback, asyncState);
    }
    
    /// <remarks/>
    public CxWSBasicRepsonse EndUpdateScanComment(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CxWSBasicRepsonse)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateScanCommentAsync(string sessionID, long ScanID, string Comment) {
        this.UpdateScanCommentAsync(sessionID, ScanID, Comment, null);
    }
    
    /// <remarks/>
    public void UpdateScanCommentAsync(string sessionID, long ScanID, string Comment, object userState) {
        if ((this.UpdateScanCommentOperationCompleted == null)) {
            this.UpdateScanCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateScanCommentOperationCompleted);
        }
        this.InvokeAsync("UpdateScanComment", new object[] {
                    sessionID,
                    ScanID,
                    Comment}, this.UpdateScanCommentOperationCompleted, userState);
    }
    
    private void OnUpdateScanCommentOperationCompleted(object arg) {
        if ((this.UpdateScanCommentCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateScanCommentCompleted(this, new UpdateScanCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/v7/UploadProjectWithDefaultSettings", RequestNamespace="http://Checkmarx.com/v7", ResponseNamespace="http://Checkmarx.com/v7", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CxWSResponseSourceID UploadProjectWithDefaultSettings(string sessionId, ProjectBasicSettings projectSettings, LocalCodeContainer localCodeContainer) {
        object[] results = this.Invoke("UploadProjectWithDefaultSettings", new object[] {
                    sessionId,
                    projectSettings,
                    localCodeContainer});
        return ((CxWSResponseSourceID)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUploadProjectWithDefaultSettings(string sessionId, ProjectBasicSettings projectSettings, LocalCodeContainer localCodeContainer, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UploadProjectWithDefaultSettings", new object[] {
                    sessionId,
                    projectSettings,
                    localCodeContainer}, callback, asyncState);
    }
    
    /// <remarks/>
    public CxWSResponseSourceID EndUploadProjectWithDefaultSettings(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CxWSResponseSourceID)(results[0]));
    }
    
    /// <remarks/>
    public void UploadProjectWithDefaultSettingsAsync(string sessionId, ProjectBasicSettings projectSettings, LocalCodeContainer localCodeContainer) {
        this.UploadProjectWithDefaultSettingsAsync(sessionId, projectSettings, localCodeContainer, null);
    }
    
    /// <remarks/>
    public void UploadProjectWithDefaultSettingsAsync(string sessionId, ProjectBasicSettings projectSettings, LocalCodeContainer localCodeContainer, object userState) {
        if ((this.UploadProjectWithDefaultSettingsOperationCompleted == null)) {
            this.UploadProjectWithDefaultSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadProjectWithDefaultSettingsOperationCompleted);
        }
        this.InvokeAsync("UploadProjectWithDefaultSettings", new object[] {
                    sessionId,
                    projectSettings,
                    localCodeContainer}, this.UploadProjectWithDefaultSettingsOperationCompleted, userState);
    }
    
    private void OnUploadProjectWithDefaultSettingsOperationCompleted(object arg) {
        if ((this.UploadProjectWithDefaultSettingsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UploadProjectWithDefaultSettingsCompleted(this, new UploadProjectWithDefaultSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/v7/UploadQueries", RequestNamespace="http://Checkmarx.com/v7", ResponseNamespace="http://Checkmarx.com/v7", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CxWSBasicRepsonse UploadQueries(string sessionId, CxWSQueryGroup[] queries) {
        object[] results = this.Invoke("UploadQueries", new object[] {
                    sessionId,
                    queries});
        return ((CxWSBasicRepsonse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUploadQueries(string sessionId, CxWSQueryGroup[] queries, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UploadQueries", new object[] {
                    sessionId,
                    queries}, callback, asyncState);
    }
    
    /// <remarks/>
    public CxWSBasicRepsonse EndUploadQueries(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CxWSBasicRepsonse)(results[0]));
    }
    
    /// <remarks/>
    public void UploadQueriesAsync(string sessionId, CxWSQueryGroup[] queries) {
        this.UploadQueriesAsync(sessionId, queries, null);
    }
    
    /// <remarks/>
    public void UploadQueriesAsync(string sessionId, CxWSQueryGroup[] queries, object userState) {
        if ((this.UploadQueriesOperationCompleted == null)) {
            this.UploadQueriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadQueriesOperationCompleted);
        }
        this.InvokeAsync("UploadQueries", new object[] {
                    sessionId,
                    queries}, this.UploadQueriesOperationCompleted, userState);
    }
    
    private void OnUploadQueriesOperationCompleted(object arg) {
        if ((this.UploadQueriesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UploadQueriesCompleted(this, new UploadQueriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class Credentials {
    
    private string userField;
    
    private string passField;
    
    /// <remarks/>
    public string User {
        get {
            return this.userField;
        }
        set {
            this.userField = value;
        }
    }
    
    /// <remarks/>
    public string Pass {
        get {
            return this.passField;
        }
        set {
            this.passField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class ProjectBasicSettings {
    
    private string projectNameField;
    
    private string associatedGroupIDField;
    
    /// <remarks/>
    public string ProjectName {
        get {
            return this.projectNameField;
        }
        set {
            this.projectNameField = value;
        }
    }
    
    /// <remarks/>
    public string AssociatedGroupID {
        get {
            return this.associatedGroupIDField;
        }
        set {
            this.associatedGroupIDField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxWSResultSummary {
    
    private long queryIdField;
    
    private string queryNameField;
    
    private string queryGroupNameField;
    
    private long countField;
    
    private int severityField;
    
    private long cweField;
    
    /// <remarks/>
    public long QueryId {
        get {
            return this.queryIdField;
        }
        set {
            this.queryIdField = value;
        }
    }
    
    /// <remarks/>
    public string QueryName {
        get {
            return this.queryNameField;
        }
        set {
            this.queryNameField = value;
        }
    }
    
    /// <remarks/>
    public string QueryGroupName {
        get {
            return this.queryGroupNameField;
        }
        set {
            this.queryGroupNameField = value;
        }
    }
    
    /// <remarks/>
    public long Count {
        get {
            return this.countField;
        }
        set {
            this.countField = value;
        }
    }
    
    /// <remarks/>
    public int Severity {
        get {
            return this.severityField;
        }
        set {
            this.severityField = value;
        }
    }
    
    /// <remarks/>
    public long Cwe {
        get {
            return this.cweField;
        }
        set {
            this.cweField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class ResultState {
    
    private string resultNameField;
    
    private long resultIDField;
    
    /// <remarks/>
    public string ResultName {
        get {
            return this.resultNameField;
        }
        set {
            this.resultNameField = value;
        }
    }
    
    /// <remarks/>
    public long ResultID {
        get {
            return this.resultIDField;
        }
        set {
            this.resultIDField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxWSPathNode {
    
    private int columnField;
    
    private string fullNameField;
    
    private string fileNameField;
    
    private int lengthField;
    
    private int lineField;
    
    private string nameField;
    
    private int dOM_IdField;
    
    private int methodLineField;
    
    private int pathNodeIdField;
    
    /// <remarks/>
    public int Column {
        get {
            return this.columnField;
        }
        set {
            this.columnField = value;
        }
    }
    
    /// <remarks/>
    public string FullName {
        get {
            return this.fullNameField;
        }
        set {
            this.fullNameField = value;
        }
    }
    
    /// <remarks/>
    public string FileName {
        get {
            return this.fileNameField;
        }
        set {
            this.fileNameField = value;
        }
    }
    
    /// <remarks/>
    public int Length {
        get {
            return this.lengthField;
        }
        set {
            this.lengthField = value;
        }
    }
    
    /// <remarks/>
    public int Line {
        get {
            return this.lineField;
        }
        set {
            this.lineField = value;
        }
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public int DOM_Id {
        get {
            return this.dOM_IdField;
        }
        set {
            this.dOM_IdField = value;
        }
    }
    
    /// <remarks/>
    public int MethodLine {
        get {
            return this.methodLineField;
        }
        set {
            this.methodLineField = value;
        }
    }
    
    /// <remarks/>
    public int PathNodeId {
        get {
            return this.pathNodeIdField;
        }
        set {
            this.pathNodeIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxWSResultPath {
    
    private long similarityIdField;
    
    private long pathIdField;
    
    private string commentField;
    
    private int stateField;
    
    private int severityField;
    
    private string assignedUserField;
    
    private CxWSPathNode[] nodesField;
    
    /// <remarks/>
    public long SimilarityId {
        get {
            return this.similarityIdField;
        }
        set {
            this.similarityIdField = value;
        }
    }
    
    /// <remarks/>
    public long PathId {
        get {
            return this.pathIdField;
        }
        set {
            this.pathIdField = value;
        }
    }
    
    /// <remarks/>
    public string Comment {
        get {
            return this.commentField;
        }
        set {
            this.commentField = value;
        }
    }
    
    /// <remarks/>
    public int State {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
    
    /// <remarks/>
    public int Severity {
        get {
            return this.severityField;
        }
        set {
            this.severityField = value;
        }
    }
    
    /// <remarks/>
    public string AssignedUser {
        get {
            return this.assignedUserField;
        }
        set {
            this.assignedUserField = value;
        }
    }
    
    /// <remarks/>
    public CxWSPathNode[] Nodes {
        get {
            return this.nodesField;
        }
        set {
            this.nodesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class AuditScanResult {
    
    private long queryIdField;
    
    private string queryNameField;
    
    private string querySourceField;
    
    private int severityField;
    
    private string queryGroupNameField;
    
    private long cWEField;
    
    private string[] debugMessagesField;
    
    private string[] compilationMessagesField;
    
    private CxWSResultPath[] pathPerResultField;
    
    /// <remarks/>
    public long QueryId {
        get {
            return this.queryIdField;
        }
        set {
            this.queryIdField = value;
        }
    }
    
    /// <remarks/>
    public string QueryName {
        get {
            return this.queryNameField;
        }
        set {
            this.queryNameField = value;
        }
    }
    
    /// <remarks/>
    public string QuerySource {
        get {
            return this.querySourceField;
        }
        set {
            this.querySourceField = value;
        }
    }
    
    /// <remarks/>
    public int Severity {
        get {
            return this.severityField;
        }
        set {
            this.severityField = value;
        }
    }
    
    /// <remarks/>
    public string QueryGroupName {
        get {
            return this.queryGroupNameField;
        }
        set {
            this.queryGroupNameField = value;
        }
    }
    
    /// <remarks/>
    public long CWE {
        get {
            return this.cWEField;
        }
        set {
            this.cWEField = value;
        }
    }
    
    /// <remarks/>
    public string[] DebugMessages {
        get {
            return this.debugMessagesField;
        }
        set {
            this.debugMessagesField = value;
        }
    }
    
    /// <remarks/>
    public string[] CompilationMessages {
        get {
            return this.compilationMessagesField;
        }
        set {
            this.compilationMessagesField = value;
        }
    }
    
    /// <remarks/>
    public CxWSResultPath[] PathPerResult {
        get {
            return this.pathPerResultField;
        }
        set {
            this.pathPerResultField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class AuditResultsCollection {
    
    private AuditScanResult[] resultsField;
    
    /// <remarks/>
    public AuditScanResult[] Results {
        get {
            return this.resultsField;
        }
        set {
            this.resultsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxWSQuery {
    
    private string nameField;
    
    private long queryIdField;
    
    private string sourceField;
    
    private long cweField;
    
    private bool isExecutableField;
    
    private bool isEncryptedField;
    
    private int severityField;
    
    private long packageIdField;
    
    private QueryStatus statusField;
    
    private CxWSQueryType typeField;
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public long QueryId {
        get {
            return this.queryIdField;
        }
        set {
            this.queryIdField = value;
        }
    }
    
    /// <remarks/>
    public string Source {
        get {
            return this.sourceField;
        }
        set {
            this.sourceField = value;
        }
    }
    
    /// <remarks/>
    public long Cwe {
        get {
            return this.cweField;
        }
        set {
            this.cweField = value;
        }
    }
    
    /// <remarks/>
    public bool IsExecutable {
        get {
            return this.isExecutableField;
        }
        set {
            this.isExecutableField = value;
        }
    }
    
    /// <remarks/>
    public bool IsEncrypted {
        get {
            return this.isEncryptedField;
        }
        set {
            this.isEncryptedField = value;
        }
    }
    
    /// <remarks/>
    public int Severity {
        get {
            return this.severityField;
        }
        set {
            this.severityField = value;
        }
    }
    
    /// <remarks/>
    public long PackageId {
        get {
            return this.packageIdField;
        }
        set {
            this.packageIdField = value;
        }
    }
    
    /// <remarks/>
    public QueryStatus Status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    public CxWSQueryType Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public enum QueryStatus {
    
    /// <remarks/>
    Original,
    
    /// <remarks/>
    New,
    
    /// <remarks/>
    Edited,
    
    /// <remarks/>
    Deleted,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public enum CxWSQueryType {
    
    /// <remarks/>
    Draft,
    
    /// <remarks/>
    Regular,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxWSQueryGroup {
    
    private string nameField;
    
    private int[] impactsField;
    
    private long packageIdField;
    
    private CxWSQuery[] queriesField;
    
    private bool isReadOnlyField;
    
    private bool isEncryptedField;
    
    private string descriptionField;
    
    private int languageField;
    
    private string languageNameField;
    
    private string packageTypeNameField;
    
    private long projectIdField;
    
    private CxWSPackageTypeEnum packageTypeField;
    
    private string packageFullNameField;
    
    private System.Guid owningTeamField;
    
    private QueryStatus statusField;
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public int[] Impacts {
        get {
            return this.impactsField;
        }
        set {
            this.impactsField = value;
        }
    }
    
    /// <remarks/>
    public long PackageId {
        get {
            return this.packageIdField;
        }
        set {
            this.packageIdField = value;
        }
    }
    
    /// <remarks/>
    public CxWSQuery[] Queries {
        get {
            return this.queriesField;
        }
        set {
            this.queriesField = value;
        }
    }
    
    /// <remarks/>
    public bool IsReadOnly {
        get {
            return this.isReadOnlyField;
        }
        set {
            this.isReadOnlyField = value;
        }
    }
    
    /// <remarks/>
    public bool IsEncrypted {
        get {
            return this.isEncryptedField;
        }
        set {
            this.isEncryptedField = value;
        }
    }
    
    /// <remarks/>
    public string Description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    public int Language {
        get {
            return this.languageField;
        }
        set {
            this.languageField = value;
        }
    }
    
    /// <remarks/>
    public string LanguageName {
        get {
            return this.languageNameField;
        }
        set {
            this.languageNameField = value;
        }
    }
    
    /// <remarks/>
    public string PackageTypeName {
        get {
            return this.packageTypeNameField;
        }
        set {
            this.packageTypeNameField = value;
        }
    }
    
    /// <remarks/>
    public long ProjectId {
        get {
            return this.projectIdField;
        }
        set {
            this.projectIdField = value;
        }
    }
    
    /// <remarks/>
    public CxWSPackageTypeEnum PackageType {
        get {
            return this.packageTypeField;
        }
        set {
            this.packageTypeField = value;
        }
    }
    
    /// <remarks/>
    public string PackageFullName {
        get {
            return this.packageFullNameField;
        }
        set {
            this.packageFullNameField = value;
        }
    }
    
    /// <remarks/>
    public System.Guid OwningTeam {
        get {
            return this.owningTeamField;
        }
        set {
            this.owningTeamField = value;
        }
    }
    
    /// <remarks/>
    public QueryStatus Status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public enum CxWSPackageTypeEnum {
    
    /// <remarks/>
    Cx,
    
    /// <remarks/>
    Corporate,
    
    /// <remarks/>
    Project,
    
    /// <remarks/>
    Team,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxWSResponseBasicProjectData {
    
    private string nameField;
    
    private long idField;
    
    private CxWSResponseBasicScanData[] scansField;
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public long ID {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    public CxWSResponseBasicScanData[] scans {
        get {
            return this.scansField;
        }
        set {
            this.scansField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxWSResponseBasicScanData : CxWSBasicRepsonse {
    
    private string nameField;
    
    private long idField;
    
    private string sourceIdField;
    
    private string commentField;
    
    private long resultIdField;
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public long ID {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    public string SourceId {
        get {
            return this.sourceIdField;
        }
        set {
            this.sourceIdField = value;
        }
    }
    
    /// <remarks/>
    public string Comment {
        get {
            return this.commentField;
        }
        set {
            this.commentField = value;
        }
    }
    
    /// <remarks/>
    public long ResultId {
        get {
            return this.resultIdField;
        }
        set {
            this.resultIdField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CxWSResponseSourceID))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CxWSResponseSourceContainer))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CXWSResponseResultSummary))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CxWSResponseResultStateList))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CxWSResponseResultCollection))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CxWSResponseQueryDescription))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CxQueryCollectionResponse))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CxWSResponseProjectsScansList))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CxWSResponseProjectConfig))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CxWSResponsePresetList))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CxWSResponsePresetDetails))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CxWSResponseCache))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CxWSResponseHierarchyGroupNodes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CxWSResponseBasicScanData))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CxWSResponseSessionID))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CxWSResponseLoginData))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxWSBasicRepsonse {
    
    private bool isSuccesfullField;
    
    private string errorMessageField;
    
    /// <remarks/>
    public bool IsSuccesfull {
        get {
            return this.isSuccesfullField;
        }
        set {
            this.isSuccesfullField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorMessage {
        get {
            return this.errorMessageField;
        }
        set {
            this.errorMessageField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxWSResponseSourceID : CxWSBasicRepsonse {
    
    private long projectIDField;
    
    private string sourceIDField;
    
    /// <remarks/>
    public long ProjectID {
        get {
            return this.projectIDField;
        }
        set {
            this.projectIDField = value;
        }
    }
    
    /// <remarks/>
    public string SourceID {
        get {
            return this.sourceIDField;
        }
        set {
            this.sourceIDField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxWSResponseSourceContainer : CxWSBasicRepsonse {
    
    private LocalCodeContainer sourceCodeContainerField;
    
    /// <remarks/>
    public LocalCodeContainer sourceCodeContainer {
        get {
            return this.sourceCodeContainerField;
        }
        set {
            this.sourceCodeContainerField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class LocalCodeContainer {
    
    private byte[] zippedFileField;
    
    private string fileNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] ZippedFile {
        get {
            return this.zippedFileField;
        }
        set {
            this.zippedFileField = value;
        }
    }
    
    /// <remarks/>
    public string FileName {
        get {
            return this.fileNameField;
        }
        set {
            this.fileNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CXWSResponseResultSummary : CxWSBasicRepsonse {
    
    private CxWSResultSummary[] summaryListField;
    
    /// <remarks/>
    public CxWSResultSummary[] SummaryList {
        get {
            return this.summaryListField;
        }
        set {
            this.summaryListField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxWSResponseResultStateList : CxWSBasicRepsonse {
    
    private ResultState[] resultStateListField;
    
    /// <remarks/>
    public ResultState[] ResultStateList {
        get {
            return this.resultStateListField;
        }
        set {
            this.resultStateListField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxWSResponseResultCollection : CxWSBasicRepsonse {
    
    private AuditResultsCollection resultCollectionField;
    
    /// <remarks/>
    public AuditResultsCollection ResultCollection {
        get {
            return this.resultCollectionField;
        }
        set {
            this.resultCollectionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxWSResponseQueryDescription : CxWSBasicRepsonse {
    
    private string queryDescriptionField;
    
    /// <remarks/>
    public string QueryDescription {
        get {
            return this.queryDescriptionField;
        }
        set {
            this.queryDescriptionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxQueryCollectionResponse : CxWSBasicRepsonse {
    
    private CxWSQueryGroup[] queryGroupsField;
    
    /// <remarks/>
    public CxWSQueryGroup[] QueryGroups {
        get {
            return this.queryGroupsField;
        }
        set {
            this.queryGroupsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxWSResponseProjectsScansList : CxWSBasicRepsonse {
    
    private CxWSResponseBasicProjectData[] projectsField;
    
    /// <remarks/>
    public CxWSResponseBasicProjectData[] projects {
        get {
            return this.projectsField;
        }
        set {
            this.projectsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxWSResponseProjectConfig : CxWSBasicRepsonse {
    
    private ProjectConfiguration projectConfigField;
    
    private UserPermission permissionField;
    
    /// <remarks/>
    public ProjectConfiguration ProjectConfig {
        get {
            return this.projectConfigField;
        }
        set {
            this.projectConfigField = value;
        }
    }
    
    /// <remarks/>
    public UserPermission Permission {
        get {
            return this.permissionField;
        }
        set {
            this.permissionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class ProjectConfiguration {
    
    private ProjectSettings projectSettingsField;
    
    private SourceCodeSettings sourceCodeSettingsField;
    
    private ScheduleSettings scheduleSettingsField;
    
    private ScanActionSettings scanActionSettingsField;
    
    /// <remarks/>
    public ProjectSettings ProjectSettings {
        get {
            return this.projectSettingsField;
        }
        set {
            this.projectSettingsField = value;
        }
    }
    
    /// <remarks/>
    public SourceCodeSettings SourceCodeSettings {
        get {
            return this.sourceCodeSettingsField;
        }
        set {
            this.sourceCodeSettingsField = value;
        }
    }
    
    /// <remarks/>
    public ScheduleSettings ScheduleSettings {
        get {
            return this.scheduleSettingsField;
        }
        set {
            this.scheduleSettingsField = value;
        }
    }
    
    /// <remarks/>
    public ScanActionSettings ScanActionSettings {
        get {
            return this.scanActionSettingsField;
        }
        set {
            this.scanActionSettingsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class ProjectSettings {
    
    private long projectIDField;
    
    private string projectNameField;
    
    private long presetIDField;
    
    private string associatedGroupIDField;
    
    private long scanConfigurationIDField;
    
    private string descriptionField;
    
    /// <remarks/>
    public long projectID {
        get {
            return this.projectIDField;
        }
        set {
            this.projectIDField = value;
        }
    }
    
    /// <remarks/>
    public string ProjectName {
        get {
            return this.projectNameField;
        }
        set {
            this.projectNameField = value;
        }
    }
    
    /// <remarks/>
    public long PresetID {
        get {
            return this.presetIDField;
        }
        set {
            this.presetIDField = value;
        }
    }
    
    /// <remarks/>
    public string AssociatedGroupID {
        get {
            return this.associatedGroupIDField;
        }
        set {
            this.associatedGroupIDField = value;
        }
    }
    
    /// <remarks/>
    public long ScanConfigurationID {
        get {
            return this.scanConfigurationIDField;
        }
        set {
            this.scanConfigurationIDField = value;
        }
    }
    
    /// <remarks/>
    public string Description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class SourceCodeSettings {
    
    private SourceLocationType sourceOriginField;
    
    private Credentials userCredentialsField;
    
    private ScanPath[] pathListField;
    
    private SourceControlSettings sourceControlSettingField;
    
    private LocalCodeContainer packagedCodeField;
    
    private string sourcePullingActionField;
    
    /// <remarks/>
    public SourceLocationType SourceOrigin {
        get {
            return this.sourceOriginField;
        }
        set {
            this.sourceOriginField = value;
        }
    }
    
    /// <remarks/>
    public Credentials UserCredentials {
        get {
            return this.userCredentialsField;
        }
        set {
            this.userCredentialsField = value;
        }
    }
    
    /// <remarks/>
    public ScanPath[] PathList {
        get {
            return this.pathListField;
        }
        set {
            this.pathListField = value;
        }
    }
    
    /// <remarks/>
    public SourceControlSettings SourceControlSetting {
        get {
            return this.sourceControlSettingField;
        }
        set {
            this.sourceControlSettingField = value;
        }
    }
    
    /// <remarks/>
    public LocalCodeContainer PackagedCode {
        get {
            return this.packagedCodeField;
        }
        set {
            this.packagedCodeField = value;
        }
    }
    
    /// <remarks/>
    public string SourcePullingAction {
        get {
            return this.sourcePullingActionField;
        }
        set {
            this.sourcePullingActionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public enum SourceLocationType {
    
    /// <remarks/>
    Local,
    
    /// <remarks/>
    Shared,
    
    /// <remarks/>
    SourceControl,
    
    /// <remarks/>
    SourcePulling,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class ScanPath {
    
    private string pathField;
    
    private bool includeSubTreeField;
    
    /// <remarks/>
    public string Path {
        get {
            return this.pathField;
        }
        set {
            this.pathField = value;
        }
    }
    
    /// <remarks/>
    public bool IncludeSubTree {
        get {
            return this.includeSubTreeField;
        }
        set {
            this.includeSubTreeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class SourceControlSettings {
    
    private int portField;
    
    private bool useSSLField;
    
    private bool useSSHField;
    
    private string serverNameField;
    
    private RepositoryType repositoryField;
    
    private Credentials userCredentialsField;
    
    private SourceControlProtocolType protocolField;
    
    private string repositoryNameField;
    
    private string protocolParametersField;
    
    private string gITBranchField;
    
    private GitLsRemoteViewType gitLsViewTypeField;
    
    private string sSHPublicKeyField;
    
    private string sSHPrivateKeyField;
    
    /// <remarks/>
    public int Port {
        get {
            return this.portField;
        }
        set {
            this.portField = value;
        }
    }
    
    /// <remarks/>
    public bool UseSSL {
        get {
            return this.useSSLField;
        }
        set {
            this.useSSLField = value;
        }
    }
    
    /// <remarks/>
    public bool UseSSH {
        get {
            return this.useSSHField;
        }
        set {
            this.useSSHField = value;
        }
    }
    
    /// <remarks/>
    public string ServerName {
        get {
            return this.serverNameField;
        }
        set {
            this.serverNameField = value;
        }
    }
    
    /// <remarks/>
    public RepositoryType Repository {
        get {
            return this.repositoryField;
        }
        set {
            this.repositoryField = value;
        }
    }
    
    /// <remarks/>
    public Credentials UserCredentials {
        get {
            return this.userCredentialsField;
        }
        set {
            this.userCredentialsField = value;
        }
    }
    
    /// <remarks/>
    public SourceControlProtocolType Protocol {
        get {
            return this.protocolField;
        }
        set {
            this.protocolField = value;
        }
    }
    
    /// <remarks/>
    public string RepositoryName {
        get {
            return this.repositoryNameField;
        }
        set {
            this.repositoryNameField = value;
        }
    }
    
    /// <remarks/>
    public string ProtocolParameters {
        get {
            return this.protocolParametersField;
        }
        set {
            this.protocolParametersField = value;
        }
    }
    
    /// <remarks/>
    public string GITBranch {
        get {
            return this.gITBranchField;
        }
        set {
            this.gITBranchField = value;
        }
    }
    
    /// <remarks/>
    public GitLsRemoteViewType GitLsViewType {
        get {
            return this.gitLsViewTypeField;
        }
        set {
            this.gitLsViewTypeField = value;
        }
    }
    
    /// <remarks/>
    public string SSHPublicKey {
        get {
            return this.sSHPublicKeyField;
        }
        set {
            this.sSHPublicKeyField = value;
        }
    }
    
    /// <remarks/>
    public string SSHPrivateKey {
        get {
            return this.sSHPrivateKeyField;
        }
        set {
            this.sSHPrivateKeyField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public enum RepositoryType {
    
    /// <remarks/>
    TFS,
    
    /// <remarks/>
    SVN,
    
    /// <remarks/>
    CVS,
    
    /// <remarks/>
    GIT,
    
    /// <remarks/>
    NONE,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public enum SourceControlProtocolType {
    
    /// <remarks/>
    WindowsAuthentication,
    
    /// <remarks/>
    SSL,
    
    /// <remarks/>
    SSH,
    
    /// <remarks/>
    PasswordServer,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public enum GitLsRemoteViewType {
    
    /// <remarks/>
    TAGS,
    
    /// <remarks/>
    HEADS,
    
    /// <remarks/>
    TAGS_AND_HEADS,
    
    /// <remarks/>
    ALL,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class ScheduleSettings {
    
    private ScheduleType scheduleField;
    
    private DayOfWeek[] scheduledDaysField;
    
    private CxDateTime timeField;
    
    /// <remarks/>
    public ScheduleType Schedule {
        get {
            return this.scheduleField;
        }
        set {
            this.scheduleField = value;
        }
    }
    
    /// <remarks/>
    public DayOfWeek[] ScheduledDays {
        get {
            return this.scheduledDaysField;
        }
        set {
            this.scheduledDaysField = value;
        }
    }
    
    /// <remarks/>
    public CxDateTime Time {
        get {
            return this.timeField;
        }
        set {
            this.timeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public enum ScheduleType {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    Now,
    
    /// <remarks/>
    Weekly,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public enum DayOfWeek {
    
    /// <remarks/>
    Sunday,
    
    /// <remarks/>
    Monday,
    
    /// <remarks/>
    Tuesday,
    
    /// <remarks/>
    Wednesday,
    
    /// <remarks/>
    Thursday,
    
    /// <remarks/>
    Friday,
    
    /// <remarks/>
    Saturday,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxDateTime {
    
    private int hourField;
    
    private int minuteField;
    
    private int secondField;
    
    private int dayField;
    
    private int monthField;
    
    private int yearField;
    
    /// <remarks/>
    public int Hour {
        get {
            return this.hourField;
        }
        set {
            this.hourField = value;
        }
    }
    
    /// <remarks/>
    public int Minute {
        get {
            return this.minuteField;
        }
        set {
            this.minuteField = value;
        }
    }
    
    /// <remarks/>
    public int Second {
        get {
            return this.secondField;
        }
        set {
            this.secondField = value;
        }
    }
    
    /// <remarks/>
    public int Day {
        get {
            return this.dayField;
        }
        set {
            this.dayField = value;
        }
    }
    
    /// <remarks/>
    public int Month {
        get {
            return this.monthField;
        }
        set {
            this.monthField = value;
        }
    }
    
    /// <remarks/>
    public int Year {
        get {
            return this.yearField;
        }
        set {
            this.yearField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class ScanActionSettings {
    
    private ScanAction[] scanActionListField;
    
    /// <remarks/>
    public ScanAction[] ScanActionList {
        get {
            return this.scanActionListField;
        }
        set {
            this.scanActionListField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class ScanAction {
    
    private string[] parametersField;
    
    private ScanEventType triggerField;
    
    private ScanActionType actionField;
    
    /// <remarks/>
    public string[] Parameters {
        get {
            return this.parametersField;
        }
        set {
            this.parametersField = value;
        }
    }
    
    /// <remarks/>
    public ScanEventType Trigger {
        get {
            return this.triggerField;
        }
        set {
            this.triggerField = value;
        }
    }
    
    /// <remarks/>
    public ScanActionType Action {
        get {
            return this.actionField;
        }
        set {
            this.actionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public enum ScanEventType {
    
    /// <remarks/>
    BeforeScanStarts,
    
    /// <remarks/>
    AfterScanSucceeds,
    
    /// <remarks/>
    OnScanFailure,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public enum ScanActionType {
    
    /// <remarks/>
    EmailNotification,
    
    /// <remarks/>
    PostScanAction,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class UserPermission {
    
    private bool isAllowedToDeleteField;
    
    private bool isAllowedToDuplicateField;
    
    private bool isAllowedToRunField;
    
    private bool isAllowedToUpdateField;
    
    /// <remarks/>
    public bool IsAllowedToDelete {
        get {
            return this.isAllowedToDeleteField;
        }
        set {
            this.isAllowedToDeleteField = value;
        }
    }
    
    /// <remarks/>
    public bool IsAllowedToDuplicate {
        get {
            return this.isAllowedToDuplicateField;
        }
        set {
            this.isAllowedToDuplicateField = value;
        }
    }
    
    /// <remarks/>
    public bool IsAllowedToRun {
        get {
            return this.isAllowedToRunField;
        }
        set {
            this.isAllowedToRunField = value;
        }
    }
    
    /// <remarks/>
    public bool IsAllowedToUpdate {
        get {
            return this.isAllowedToUpdateField;
        }
        set {
            this.isAllowedToUpdateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxWSResponsePresetList : CxWSBasicRepsonse {
    
    private Preset[] presetListField;
    
    /// <remarks/>
    public Preset[] PresetList {
        get {
            return this.presetListField;
        }
        set {
            this.presetListField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class Preset {
    
    private string presetNameField;
    
    private long idField;
    
    private string owningUserField;
    
    private bool isUserAllowToUpdateField;
    
    private bool isUserAllowToDeleteField;
    
    /// <remarks/>
    public string PresetName {
        get {
            return this.presetNameField;
        }
        set {
            this.presetNameField = value;
        }
    }
    
    /// <remarks/>
    public long ID {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    public string owningUser {
        get {
            return this.owningUserField;
        }
        set {
            this.owningUserField = value;
        }
    }
    
    /// <remarks/>
    public bool isUserAllowToUpdate {
        get {
            return this.isUserAllowToUpdateField;
        }
        set {
            this.isUserAllowToUpdateField = value;
        }
    }
    
    /// <remarks/>
    public bool isUserAllowToDelete {
        get {
            return this.isUserAllowToDeleteField;
        }
        set {
            this.isUserAllowToDeleteField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxWSResponsePresetDetails : CxWSBasicRepsonse {
    
    private CxPresetDetails presetField;
    
    /// <remarks/>
    public CxPresetDetails preset {
        get {
            return this.presetField;
        }
        set {
            this.presetField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxPresetDetails {
    
    private long[] queryIdsField;
    
    private long idField;
    
    private string nameField;
    
    private string owningteamField;
    
    private bool isPublicField;
    
    private string ownerField;
    
    private bool isUserAllowToUpdateField;
    
    private bool isUserAllowToDeleteField;
    
    /// <remarks/>
    public long[] queryIds {
        get {
            return this.queryIdsField;
        }
        set {
            this.queryIdsField = value;
        }
    }
    
    /// <remarks/>
    public long id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public string owningteam {
        get {
            return this.owningteamField;
        }
        set {
            this.owningteamField = value;
        }
    }
    
    /// <remarks/>
    public bool isPublic {
        get {
            return this.isPublicField;
        }
        set {
            this.isPublicField = value;
        }
    }
    
    /// <remarks/>
    public string owner {
        get {
            return this.ownerField;
        }
        set {
            this.ownerField = value;
        }
    }
    
    /// <remarks/>
    public bool isUserAllowToUpdate {
        get {
            return this.isUserAllowToUpdateField;
        }
        set {
            this.isUserAllowToUpdateField = value;
        }
    }
    
    /// <remarks/>
    public bool isUserAllowToDelete {
        get {
            return this.isUserAllowToDeleteField;
        }
        set {
            this.isUserAllowToDeleteField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxWSResponseCache : CxWSBasicRepsonse {
    
    private byte[] cacheField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Cache {
        get {
            return this.cacheField;
        }
        set {
            this.cacheField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxWSResponseHierarchyGroupNodes : CxWSBasicRepsonse {
    
    private HierarchyGroupNode[] hierarchyGroupNodesField;
    
    /// <remarks/>
    public HierarchyGroupNode[] HierarchyGroupNodes {
        get {
            return this.hierarchyGroupNodesField;
        }
        set {
            this.hierarchyGroupNodesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class HierarchyGroupNode : Group {
    
    private HierarchyGroupNode[] childsField;
    
    private bool membershipField;
    
    /// <remarks/>
    public HierarchyGroupNode[] Childs {
        get {
            return this.childsField;
        }
        set {
            this.childsField = value;
        }
    }
    
    /// <remarks/>
    public bool Membership {
        get {
            return this.membershipField;
        }
        set {
            this.membershipField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(HierarchyGroupNode))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class Group {
    
    private string groupNameField;
    
    private string idField;
    
    private GroupType typeField;
    
    private string guidField;
    
    /// <remarks/>
    public string GroupName {
        get {
            return this.groupNameField;
        }
        set {
            this.groupNameField = value;
        }
    }
    
    /// <remarks/>
    public string ID {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    public GroupType Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    public string Guid {
        get {
            return this.guidField;
        }
        set {
            this.guidField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public enum GroupType {
    
    /// <remarks/>
    Team,
    
    /// <remarks/>
    Company,
    
    /// <remarks/>
    SP,
    
    /// <remarks/>
    Server,
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CxWSResponseLoginData))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxWSResponseSessionID : CxWSBasicRepsonse {
    
    private string sessionIdField;
    
    /// <remarks/>
    public string SessionId {
        get {
            return this.sessionIdField;
        }
        set {
            this.sessionIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Checkmarx.com/v7")]
public partial class CxWSResponseLoginData : CxWSResponseSessionID {
    
    private string familyNameField;
    
    private string firstNameField;
    
    private string userNameField;
    
    private long userIDField;
    
    private int userPreferedLanguageLCIDField;
    
    private bool isAllowedToCreateProjectField;
    
    private bool isAllowedToChangeProjectField;
    
    private bool isAllowedToManageUsersField;
    
    private bool isAllowedToViewCompaniesField;
    
    private bool isAllowedToManageCompaniesField;
    
    private bool isAllowedToManageServerField;
    
    private bool isAllowedToViewInstallationDataField;
    
    private bool isAllowedToViewSpField;
    
    private bool isAllowedToManageSpField;
    
    private bool isScannerField;
    
    private bool isAuditorField;
    
    private bool isAllowedToManagePresetsField;
    
    private bool isAllowedToManagePredefinedCommandField;
    
    private bool isAllowedToManagePostScanActionField;
    
    private bool isAllowedToModifyResultDetailsField;
    
    private bool enableIncrementalScanField;
    
    private bool showSaaSPackageNotificationAndErrorsField;
    
    private bool showSaaSPackageDetailsField;
    
    private bool isAdviseChangePasswordField;
    
    /// <remarks/>
    public string FamilyName {
        get {
            return this.familyNameField;
        }
        set {
            this.familyNameField = value;
        }
    }
    
    /// <remarks/>
    public string FirstName {
        get {
            return this.firstNameField;
        }
        set {
            this.firstNameField = value;
        }
    }
    
    /// <remarks/>
    public string UserName {
        get {
            return this.userNameField;
        }
        set {
            this.userNameField = value;
        }
    }
    
    /// <remarks/>
    public long UserID {
        get {
            return this.userIDField;
        }
        set {
            this.userIDField = value;
        }
    }
    
    /// <remarks/>
    public int UserPreferedLanguageLCID {
        get {
            return this.userPreferedLanguageLCIDField;
        }
        set {
            this.userPreferedLanguageLCIDField = value;
        }
    }
    
    /// <remarks/>
    public bool IsAllowedToCreateProject {
        get {
            return this.isAllowedToCreateProjectField;
        }
        set {
            this.isAllowedToCreateProjectField = value;
        }
    }
    
    /// <remarks/>
    public bool IsAllowedToChangeProject {
        get {
            return this.isAllowedToChangeProjectField;
        }
        set {
            this.isAllowedToChangeProjectField = value;
        }
    }
    
    /// <remarks/>
    public bool IsAllowedToManageUsers {
        get {
            return this.isAllowedToManageUsersField;
        }
        set {
            this.isAllowedToManageUsersField = value;
        }
    }
    
    /// <remarks/>
    public bool IsAllowedToViewCompanies {
        get {
            return this.isAllowedToViewCompaniesField;
        }
        set {
            this.isAllowedToViewCompaniesField = value;
        }
    }
    
    /// <remarks/>
    public bool IsAllowedToManageCompanies {
        get {
            return this.isAllowedToManageCompaniesField;
        }
        set {
            this.isAllowedToManageCompaniesField = value;
        }
    }
    
    /// <remarks/>
    public bool IsAllowedToManageServer {
        get {
            return this.isAllowedToManageServerField;
        }
        set {
            this.isAllowedToManageServerField = value;
        }
    }
    
    /// <remarks/>
    public bool IsAllowedToViewInstallationData {
        get {
            return this.isAllowedToViewInstallationDataField;
        }
        set {
            this.isAllowedToViewInstallationDataField = value;
        }
    }
    
    /// <remarks/>
    public bool IsAllowedToViewSp {
        get {
            return this.isAllowedToViewSpField;
        }
        set {
            this.isAllowedToViewSpField = value;
        }
    }
    
    /// <remarks/>
    public bool IsAllowedToManageSp {
        get {
            return this.isAllowedToManageSpField;
        }
        set {
            this.isAllowedToManageSpField = value;
        }
    }
    
    /// <remarks/>
    public bool IsScanner {
        get {
            return this.isScannerField;
        }
        set {
            this.isScannerField = value;
        }
    }
    
    /// <remarks/>
    public bool IsAuditor {
        get {
            return this.isAuditorField;
        }
        set {
            this.isAuditorField = value;
        }
    }
    
    /// <remarks/>
    public bool IsAllowedToManagePresets {
        get {
            return this.isAllowedToManagePresetsField;
        }
        set {
            this.isAllowedToManagePresetsField = value;
        }
    }
    
    /// <remarks/>
    public bool isAllowedToManagePredefinedCommand {
        get {
            return this.isAllowedToManagePredefinedCommandField;
        }
        set {
            this.isAllowedToManagePredefinedCommandField = value;
        }
    }
    
    /// <remarks/>
    public bool IsAllowedToManagePostScanAction {
        get {
            return this.isAllowedToManagePostScanActionField;
        }
        set {
            this.isAllowedToManagePostScanActionField = value;
        }
    }
    
    /// <remarks/>
    public bool IsAllowedToModifyResultDetails {
        get {
            return this.isAllowedToModifyResultDetailsField;
        }
        set {
            this.isAllowedToModifyResultDetailsField = value;
        }
    }
    
    /// <remarks/>
    public bool EnableIncrementalScan {
        get {
            return this.enableIncrementalScanField;
        }
        set {
            this.enableIncrementalScanField = value;
        }
    }
    
    /// <remarks/>
    public bool ShowSaaSPackageNotificationAndErrors {
        get {
            return this.showSaaSPackageNotificationAndErrorsField;
        }
        set {
            this.showSaaSPackageNotificationAndErrorsField = value;
        }
    }
    
    /// <remarks/>
    public bool ShowSaaSPackageDetails {
        get {
            return this.showSaaSPackageDetailsField;
        }
        set {
            this.showSaaSPackageDetailsField = value;
        }
    }
    
    /// <remarks/>
    public bool IsAdviseChangePassword {
        get {
            return this.isAdviseChangePasswordField;
        }
        set {
            this.isAdviseChangePasswordField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CxWSResponseLoginData Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CxWSResponseLoginData)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void AddScanResultsToProjectCompletedEventHandler(object sender, AddScanResultsToProjectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AddScanResultsToProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal AddScanResultsToProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CxWSResponseBasicScanData Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CxWSResponseBasicScanData)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetAncestryGroupTreeCompletedEventHandler(object sender, GetAncestryGroupTreeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAncestryGroupTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetAncestryGroupTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CxWSResponseHierarchyGroupNodes Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CxWSResponseHierarchyGroupNodes)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetCacheCompletedEventHandler(object sender, GetCacheCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CxWSResponseCache Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CxWSResponseCache)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetHierarchyGroupTreeCompletedEventHandler(object sender, GetHierarchyGroupTreeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetHierarchyGroupTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetHierarchyGroupTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CxWSResponseHierarchyGroupNodes Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CxWSResponseHierarchyGroupNodes)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetPresetDetailsCompletedEventHandler(object sender, GetPresetDetailsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPresetDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPresetDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CxWSResponsePresetDetails Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CxWSResponsePresetDetails)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetPresetListCompletedEventHandler(object sender, GetPresetListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPresetListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPresetListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CxWSResponsePresetList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CxWSResponsePresetList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetProjectConfigurationCompletedEventHandler(object sender, GetProjectConfigurationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetProjectConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetProjectConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CxWSResponseProjectConfig Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CxWSResponseProjectConfig)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetProjectsWithScansCompletedEventHandler(object sender, GetProjectsWithScansCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetProjectsWithScansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetProjectsWithScansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CxWSResponseProjectsScansList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CxWSResponseProjectsScansList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetQueryCollectionForLanguageCompletedEventHandler(object sender, GetQueryCollectionForLanguageCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetQueryCollectionForLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetQueryCollectionForLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CxQueryCollectionResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CxQueryCollectionResponse)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetQueryCollectionForLanguageByTeamIdCompletedEventHandler(object sender, GetQueryCollectionForLanguageByTeamIdCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetQueryCollectionForLanguageByTeamIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetQueryCollectionForLanguageByTeamIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CxQueryCollectionResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CxQueryCollectionResponse)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetQueryDescriptionCompletedEventHandler(object sender, GetQueryDescriptionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetQueryDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetQueryDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CxWSResponseQueryDescription Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CxWSResponseQueryDescription)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetResultsCompletedEventHandler(object sender, GetResultsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CxWSResponseResultCollection Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CxWSResponseResultCollection)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetResultStateListCompletedEventHandler(object sender, GetResultStateListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetResultStateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetResultStateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CxWSResponseResultStateList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CxWSResponseResultStateList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetResultSummaryCompletedEventHandler(object sender, GetResultSummaryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetResultSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetResultSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CXWSResponseResultSummary Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CXWSResponseResultSummary)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetSourceCodeForScanCompletedEventHandler(object sender, GetSourceCodeForScanCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetSourceCodeForScanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetSourceCodeForScanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CxWSResponseSourceContainer Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CxWSResponseSourceContainer)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void LogoutCompletedEventHandler(object sender, LogoutCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LogoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal LogoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CxWSBasicRepsonse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CxWSBasicRepsonse)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void UpdateResultStateCompletedEventHandler(object sender, UpdateResultStateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateResultStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateResultStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CxWSBasicRepsonse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CxWSBasicRepsonse)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void UpdateScanCommentCompletedEventHandler(object sender, UpdateScanCommentCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateScanCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateScanCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CxWSBasicRepsonse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CxWSBasicRepsonse)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void UploadProjectWithDefaultSettingsCompletedEventHandler(object sender, UploadProjectWithDefaultSettingsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UploadProjectWithDefaultSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UploadProjectWithDefaultSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CxWSResponseSourceID Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CxWSResponseSourceID)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void UploadQueriesCompletedEventHandler(object sender, UploadQueriesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UploadQueriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UploadQueriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CxWSBasicRepsonse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CxWSBasicRepsonse)(this.results[0]));
        }
    }
}
}
