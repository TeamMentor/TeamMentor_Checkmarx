//O2Ref:System.Web.Services.dll
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5472
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.1432.
// 

namespace Checkmarx712
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "CxWSResolverSoap", Namespace = "http://Checkmarx.com")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof (CxWSBasicRepsonse))]
    public partial class CxWSResolver_Proxy : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback GetWebServiceUrlOperationCompleted;

        /// <remarks/>
        public CxWSResolver_Proxy(string url)
        {
            //this.Url = "http://174.129.243.209/CxWebInterface/CxWSResolver.asmx";
            this.Url = url;
        }

        /// <remarks/>
        public event GetWebServiceUrlCompletedEventHandler GetWebServiceUrlCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Checkmarx.com/GetWebServiceUrl",
            RequestNamespace = "http://Checkmarx.com", ResponseNamespace = "http://Checkmarx.com",
            Use = System.Web.Services.Description.SoapBindingUse.Literal,
            ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CxWSResponseDiscovery GetWebServiceUrl(CxClientType ClientType, int APIVersion)
        {
            object[] results = this.Invoke("GetWebServiceUrl", new object[]
            {
                ClientType,
                APIVersion
            });
            return ((CxWSResponseDiscovery) (results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetWebServiceUrl(CxClientType ClientType, int APIVersion,
            System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetWebServiceUrl", new object[]
            {
                ClientType,
                APIVersion
            }, callback, asyncState);
        }

        /// <remarks/>
        public CxWSResponseDiscovery EndGetWebServiceUrl(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((CxWSResponseDiscovery) (results[0]));
        }

        /// <remarks/>
        public void GetWebServiceUrlAsync(CxClientType ClientType, int APIVersion)
        {
            this.GetWebServiceUrlAsync(ClientType, APIVersion, null);
        }

        /// <remarks/>
        public void GetWebServiceUrlAsync(CxClientType ClientType, int APIVersion, object userState)
        {
            if ((this.GetWebServiceUrlOperationCompleted == null))
            {
                this.GetWebServiceUrlOperationCompleted =
                    new System.Threading.SendOrPostCallback(this.OnGetWebServiceUrlOperationCompleted);
            }
            this.InvokeAsync("GetWebServiceUrl", new object[]
            {
                ClientType,
                APIVersion
            }, this.GetWebServiceUrlOperationCompleted, userState);
        }

        private void OnGetWebServiceUrlOperationCompleted(object arg)
        {
            if ((this.GetWebServiceUrlCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs =
                    ((System.Web.Services.Protocols.InvokeCompletedEventArgs) (arg));
                this.GetWebServiceUrlCompleted(this,
                    new GetWebServiceUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
                        invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://Checkmarx.com")]
    public enum CxClientType
    {

        /// <remarks/>
        None,

        /// <remarks/>
        WebPortal,

        /// <remarks/>
        CLI,

        /// <remarks/>
        Eclipse,

        /// <remarks/>
        VS,

        /// <remarks/>
        InteliJ,

        /// <remarks/>
        Audit,

        /// <remarks/>
        SDK,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://Checkmarx.com")]
    public partial class CxWSResponseDiscovery : CxWSBasicRepsonse
    {

        private string serviceURLField;

        /// <remarks/>
        public string ServiceURL
        {
            get
            {
                return this.serviceURLField;
            }
            set
            {
                this.serviceURLField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof (CxWSResponseDiscovery))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://Checkmarx.com")]
    public partial class CxWSBasicRepsonse
    {

        private bool isSuccesfullField;

        private string errorMessageField;

        /// <remarks/>
        public bool IsSuccesfull
        {
            get
            {
                return this.isSuccesfullField;
            }
            set
            {
                this.isSuccesfullField = value;
            }
        }

        /// <remarks/>
        public string ErrorMessage
        {
            get
            {
                return this.errorMessageField;
            }
            set
            {
                this.errorMessageField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void GetWebServiceUrlCompletedEventHandler(object sender, GetWebServiceUrlCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebServiceUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetWebServiceUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled,
            object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CxWSResponseDiscovery Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CxWSResponseDiscovery) (this.results[0]));
            }
        }
    }
}